export const computerScienceGcseEdexcelTopics: string[] = [
  // Computational Thinking
  'Computational thinking: Decomposition benefit',
  'Computational thinking: Abstraction benefit',
  'Computational thinking: Subprograms benefit',
  'Computational thinking: Follow & write algorithms',
  'Computational thinking: Algorithms - sequence',
  'Computational thinking: Algorithms - selection',
  'Computational thinking: Algorithms - count-controlled repetition',
  'Computational thinking: Algorithms - condition-controlled repetition',
  'Computational thinking: Algorithms - iteration (data structure)',
  'Computational thinking: Algorithms - input',
  'Computational thinking: Algorithms - processing',
  'Computational thinking: Algorithms - output',
  'Computational thinking: Algorithms - variables',
  'Computational thinking: Algorithms - constants',
  'Computational thinking: Algorithms - 1D data structures',
  'Computational thinking: Algorithms - 2D data structures',
  'Computational thinking: Algorithms - strings',
  'Computational thinking: Algorithms - records',
  'Computational thinking: Algorithms - arrays',
  'Computational thinking: Algorithms - arithmetic operators',
  'Computational thinking: Algorithms - relational operators',
  'Computational thinking: Algorithms - logical operators',
  'Computational thinking: Determine algorithm output',
  'Computational thinking: Use trace table',
  'Computational thinking: Program error types (syntax)',
  'Computational thinking: Program error types (logic)',
  'Computational thinking: Program error types (runtime)',
  'Computational thinking: Identify logic errors',
  'Computational thinking: Correct logic errors',
  'Computational thinking: Standard algorithms - bubble sort',
  'Computational thinking: Standard algorithms - merge sort',
  'Computational thinking: Standard algorithms - linear search',
  'Computational thinking: Standard algorithms - binary search',
  'Computational thinking: Evaluate algorithm fitness',
  'Computational thinking: Evaluate algorithm efficiency (compares)',
  'Computational thinking: Evaluate algorithm efficiency (loop passes)',
  'Computational thinking: Evaluate algorithm efficiency (memory use)',

  // Truth Tables
  'Truth tables: Apply logical operators (AND)',
  'Truth tables: Apply logical operators (OR)',
  'Truth tables: Apply logical operators (NOT)',
  'Truth tables: Up to three inputs',

  // Data
  'Data: Computers use binary for data',
  'Data: Computers use binary for instructions',
  'Data: Max states from binary pattern length',
  'Data: Unsigned integers',
  'Data: Two\'s complement signed integers',
  'Data: Convert denary to 8-bit binary (0-255)',
  'Data: Convert denary to 8-bit binary (-128 to +127)',
  'Data: Add two positive binary patterns',
  'Data: Logical binary shifts',
  'Data: Arithmetic binary shifts',
  'Data: Overflow concept',
  'Data: Hexadecimal use',
  'Data: Convert hexadecimal to binary',

  // Data Representation
  'Data representation: Encode characters (7-bit ASCII)',
  'Data representation: Bitmap images (pixels)',
  'Data representation: Bitmap images (resolution)',
  'Data representation: Bitmap images (colour depth)',
  'Data representation: Analogue sound (amplitude)',
  'Data representation: Analogue sound (sample rate)',
  'Data representation: Analogue sound (bit depth)',
  'Data representation: Analogue sound (sample interval)',
  'Data representation: Binary representation limitations (bits)',

  // Data Storage & Compression
  'Data storage & compression: Data storage - bit',
  'Data storage & compression: Data storage - nibble',
  'Data storage & compression: Data storage - byte',
  'Data storage & compression: Data storage - kibibyte',
  'Data storage & compression: Data storage - mebibyte',
  'Data storage & compression: Data storage - gibibyte',
  'Data storage & compression: Data storage - tebibyte',
  'Data storage & compression: Calculate file sizes',
  'Data storage & compression: Calculate data capacity',
  'Data storage & compression: Data compression need',
  'Data storage & compression: Data compression methods (lossless)',
  'Data storage & compression: Data compression methods (lossy)',

  // Computers - Hardware
  'Computers - Hardware: Von Neumann stored program concept',
  'Computers - Hardware: Main memory (RAM)',
  'Computers - Hardware: CPU (control unit)',
  'Computers - Hardware: CPU (arithmetic logic unit)',
  'Computers - Hardware: CPU (registers)',
  'Computers - Hardware: Clock',
  'Computers - Hardware: Address bus',
  'Computers - Hardware: Data bus',
  'Computers - Hardware: Control bus',
  'Computers - Hardware: Fetch-decode-execute cycle',
  'Computers - Hardware: Secondary storage role',
  'Computers - Hardware: Data storage (magnetic)',
  'Computers - Hardware: Data storage (optical)',
  'Computers - Hardware: Data storage (solid state)',
  'Computers - Hardware: Embedded system concept',
  'Computers - Hardware: Embedded systems use',

  // Computers - Software
  'Computers - Software: Operating system purpose',
  'Computers - Software: Operating system functionality (file management)',
  'Computers - Software: Operating system functionality (process management)',
  'Computers - Software: Operating system functionality (peripheral management)',
  'Computers - Software: Operating system functionality (user management)',
  'Computers - Software: Utility software purpose',
  'Computers - Software: Utility software functionality (file repair)',
  'Computers - Software: Utility software functionality (backup)',
  'Computers - Software: Utility software functionality (data compression)',
  'Computers - Software: Utility software functionality (disk defragmentation)',
  'Computers - Software: Utility software functionality (anti-malware)',
  'Computers - Software: Robust software importance',
  'Computers - Software: Identify vulnerabilities (audit trails)',
  'Computers - Software: Identify vulnerabilities (code reviews)',

  // Computers - Programming Languages
  'Computers - Programming languages: Low-level language characteristics',
  'Computers - Programming languages: Low-level language purposes',
  'Computers - Programming languages: High-level language characteristics',
  'Computers - Programming languages: High-level language purposes',
  'Computers - Programming languages: Interpreter vs compiler',

  // Networks
  'Networks: Why computers are networked',
  'Networks: Network types (LAN)',
  'Networks: Network types (WAN)',
  'Networks: Internet structure (IP addressing)',
  'Networks: Internet structure (routers)',
  'Networks: Wired connectivity impact (speed)',
  'Networks: Wired connectivity impact (range)',
  'Networks: Wired connectivity impact (latency)',
  'Networks: Wired connectivity impact (bandwidth)',
  'Networks: Wireless connectivity impact (speed)',
  'Networks: Wireless connectivity impact (range)',
  'Networks: Wireless connectivity impact (latency)',
  'Networks: Wireless connectivity impact (bandwidth)',
  'Networks: Network speeds (kilobit)',
  'Networks: Network speeds (megabit)',
  'Networks: Network speeds (gigabit)',
  'Networks: Construct expressions (file size)',
  'Networks: Construct expressions (transmission rate)',
  'Networks: Construct expressions (time)',
  'Networks: Network protocols role',
  'Networks: Network protocols need',
  'Networks: Network protocols (Ethernet)',
  'Networks: Network protocols (Wi-Fi)',
  'Networks: Network protocols (TCP/IP)',
  'Networks: Network protocols (HTTP)',
  'Networks: Network protocols (HTTPS)',
  'Networks: Network protocols (FTP)',
  'Networks: Email protocols (POP3)',
  'Networks: Email protocols (SMTP)',
  'Networks: Email protocols (IMAP)',
  'Networks: 4-layer TCP/IP model (application)',
  'Networks: 4-layer TCP/IP model (transport)',
  'Networks: 4-layer TCP/IP model (internet)',
  'Networks: 4-layer TCP/IP model (link)',

  // Network Security
  'Network security: Importance of network security',
  'Network security: Identify network vulnerabilities (penetration testing)',
  'Network security: Identify network vulnerabilities (ethical hacking)',
  'Network security: Protect networks (access control)',
  'Network security: Protect networks (physical security)',
  'Network security: Protect networks (firewalls)',

  // Issues & Impact - Environmental
  'Issues & impact - Environmental: Energy consumption (digital devices)',
  'Issues & impact - Environmental: Manufacture (digital devices)',
  'Issues & impact - Environmental: Replacement cycle (digital devices)',
  'Issues & impact - Environmental: Disposal (digital devices)',

  // Issues & Impact - Ethical & Legal
  'Issues & impact - Ethical & legal: Personal data collection/use (privacy)',
  'Issues & impact - Ethical & legal: Personal data collection/use (ownership)',
  'Issues & impact - Ethical & legal: Personal data collection/use (consent)',
  'Issues & impact - Ethical & legal: Personal data collection/use (misuse)',
  'Issues & impact - Ethical & legal: Personal data collection/use (data protection)',
  'Issues & impact - Ethical & legal: AI/ML/Robotics use (accountability)',
  'Issues & impact - Ethical & legal: AI/ML/Robotics use (safety)',
  'Issues & impact - Ethical & legal: AI/ML/Robotics use (algorithmic bias)',
  'Issues & impact - Ethical & legal: AI/ML/Robotics use (legal liability)',
  'Issues & impact - Ethical & legal: Intellectual property protection (copyright)',
  'Issues & impact - Ethical & legal: Intellectual property protection (patents)',
  'Issues & impact - Ethical & legal: Intellectual property protection (trademarks)',
  'Issues & impact - Ethical & legal: Intellectual property protection (licencing)',

  // Issues & Impact - Cybersecurity
  'Issues & impact - Cybersecurity: Malware threat (viruses)',
  'Issues & impact - Cybersecurity: Malware threat (worms)',
  'Issues & impact - Cybersecurity: Malware threat (Trojans)',
  'Issues & impact - Cybersecurity: Malware threat (ransomware)',
  'Issues & impact - Cybersecurity: Malware threat (key loggers)',
  'Issues & impact - Cybersecurity: Hackers exploit vulnerabilities (unpatched software)',
  'Issues & impact - Cybersecurity: Hackers exploit vulnerabilities (out-of-date anti-malware)',
  'Issues & impact - Cybersecurity: Social engineering cyberattacks',
  'Issues & impact - Cybersecurity: Protect digital systems (anti-malware)',
  'Issues & impact - Cybersecurity: Protect digital systems (encryption)',
  'Issues & impact - Cybersecurity: Protect digital systems (acceptable use policies)',
  'Issues & impact - Cybersecurity: Protect digital systems (backup & recovery)',

  // Problem Solving with Programming
  'Problem solving with programming: Decomposition for problem solving',
  'Problem solving with programming: Abstraction for problem solving',
  'Problem solving with programming: Read programs',
  'Problem solving with programming: Write programs',
  'Problem solving with programming: Analyse programs',
  'Problem solving with programming: Refine programs',
  'Problem solving with programming: Convert algorithms to programs',
  'Problem solving with programming: Techniques for readable programs (layout)',
  'Problem solving with programming: Techniques for readable programs (indentation)',
  'Problem solving with programming: Techniques for readable programs (comments)',
  'Problem solving with programming: Techniques for readable programs (meaningful identifiers)',
  'Problem solving with programming: Techniques for readable programs (white space)',
  'Problem solving with programming: Identify program errors (logic)',
  'Problem solving with programming: Identify program errors (syntax)',
  'Problem solving with programming: Identify program errors (runtime)',
  'Problem solving with programming: Locate program errors',
  'Problem solving with programming: Correct program errors',
  'Problem solving with programming: Evaluate program fitness',
  'Problem solving with programming: Evaluate program efficiency (compares)',
  'Problem solving with programming: Evaluate program efficiency (loop passes)',
  'Problem solving with programming: Evaluate program efficiency (memory)',

  // Constructs
  'Constructs: Identify structural components (constants)',
  'Constructs: Identify structural components (variables)',
  'Constructs: Identify structural components (initialisation statements)',
  'Constructs: Identify structural components (assignment statements)',
  'Constructs: Identify structural components (command sequences)',
  'Constructs: Identify structural components (selection)',
  'Constructs: Identify structural components (repetition)',
  'Constructs: Identify structural components (iteration)',
  'Constructs: Identify structural components (data structures)',
  'Constructs: Identify structural components (subprograms)',
  'Constructs: Identify structural components (parameters)',
  'Constructs: Identify structural components (input/output)',
  'Constructs: Write programs - sequencing',
  'Constructs: Write programs - selection',
  'Constructs: Write programs - count-controlled repetition',
  'Constructs: Write programs - condition-controlled repetition',
  'Constructs: Write programs - iteration (data structure)',
  'Constructs: Write programs - single entry/exit points',

  // Data Types & Structures
  'Data types & structures: Primitive data types (integer)',
  'Data types & structures: Primitive data types (real)',
  'Data types & structures: Primitive data types (Boolean)',
  'Data types & structures: Primitive data types (char)',
  'Data types & structures: 1D structured data types (string)',
  'Data types & structures: 1D structured data types (array)',
  'Data types & structures: 1D structured data types (record)',
  'Data types & structures: 2D structured data types (string)',
  'Data types & structures: 2D structured data types (array)',
  'Data types & structures: 2D structured data types (record)',
  'Data types & structures: Use variables',
  'Data types & structures: Use constants',
  'Data types & structures: Manipulate strings (length)',
  'Data types & structures: Manipulate strings (position)',
  'Data types & structures: Manipulate strings (substrings)',
  'Data types & structures: Manipulate strings (case conversion)',

  // Input/Output
  'Input/output: Accept user input',
  'Input/output: Respond to user input',
  'Input/output: Read from CSV text files',
  'Input/output: Write to CSV text files',
  'Input/output: Implement validation (length check)',
  'Input/output: Implement validation (presence check)',
  'Input/output: Implement validation (range check)',
  'Input/output: Implement validation (pattern check)',
  'Input/output: Implement authentication (ID)',
  'Input/output: Implement authentication (password)',
  'Input/output: Implement authentication (lookup)',

  // Operators
  'Operators: Arithmetic operators',
  'Operators: Relational operators',
  'Operators: Logical operators',

  // Subprograms
  'Subprograms: Use pre-existing subprograms (built-in)',
  'Subprograms: Use pre-existing subprograms (library)',
  'Subprograms: Use user-devised subprograms (procedures)',
  'Subprograms: Use user-devised subprograms (functions)',
  'Subprograms: Write functions (parameters)',
  'Subprograms: Write functions (return values)',
  'Subprograms: Write procedures (parameters)',
  'Subprograms: Write procedures (no return values)',
  'Subprograms: Global variables',
  'Subprograms: Local variables'
]; 